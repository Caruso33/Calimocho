/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Calimocho, CalimochoInterface } from "../../contracts/Calimocho";

const _abi = [
  {
    inputs: [],
    name: "currentDocumentId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "docCidToVoting",
    outputs: [
      {
        internalType: "uint256",
        name: "documentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "documentCid",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "quorum",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "expiration",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "docIdToCid",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getOwnerDocuments",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "documentId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "documentCid",
            type: "string",
          },
          {
            internalType: "address[]",
            name: "participants",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "quorum",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "expiration",
            type: "string",
          },
        ],
        internalType: "struct Calimocho.DocumentVoting[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerToVotings",
    outputs: [
      {
        internalType: "uint256",
        name: "documentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "documentCid",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "quorum",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "expiration",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_documentCid",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "participants",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "quorum",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "expiration",
        type: "string",
      },
    ],
    name: "registerDocument",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e90806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80633f508912116100505780633f508912146100cc57806343d59665146100ec5780634adb28b11461010c57600080fd5b8063136aa53a14610077578063142ec916146100a45780633a4b52a7146100b9575b600080fd5b61008a6100853660046107c2565b610123565b60405161009b95949392919061085a565b60405180910390f35b6100b76100b23660046109bf565b61029a565b005b61008a6100c7366004610abb565b6103c5565b6100df6100da366004610af8565b610414565b60405161009b9190610b11565b6100ff6100fa366004610b2b565b6104ae565b60405161009b9190610b46565b61011560005481565b60405190815260200161009b565b6003602052816000526040600020818154811061013f57600080fd5b600091825260209091206006909102018054600182015460028301805492955073ffffffffffffffffffffffffffffffffffffffff90911693509061018390610c6b565b80601f01602080910402602001604051908101604052809291908181526020018280546101af90610c6b565b80156101fc5780601f106101d1576101008083540402835291602001916101fc565b820191906000526020600020905b8154815290600101906020018083116101df57829003601f168201915b50505050509080600401549080600501805461021790610c6b565b80601f016020809104026020016040519081016040528092919081815260200182805461024390610c6b565b80156102905780601f1061026557610100808354040283529160200191610290565b820191906000526020600020905b81548152906001019060200180831161027357829003601f168201915b5050505050905085565b6040805160c0810182526000805480835233602080850191909152838501899052606084018890526080840187905260a0840186905290825260019052919091206102e58682610d0d565b50806002866040516102f79190610e27565b908152604080516020928190038301902083518155918301516001830180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117905582015160028201906103689082610d0d565b50606082015180516103849160038401916020909101906106fa565b506080820151600482015560a082015160058201906103a39082610d0d565b5090505060016000808282546103b99190610e43565b90915550505050505050565b805160208183018101805160028083529383019290940191909120929052815460018301549183018054919373ffffffffffffffffffffffffffffffffffffffff909316929161018390610c6b565b6001602052600090815260409020805461042d90610c6b565b80601f016020809104026020016040519081016040528092919081815260200182805461045990610c6b565b80156104a65780601f1061047b576101008083540402835291602001916104a6565b820191906000526020600020905b81548152906001019060200180831161048957829003601f168201915b505050505081565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360209081526040808320805482518185028101850190935280835260609492939192909184015b828210156106ef5760008481526020908190206040805160c0810182526006860290920180548352600181015473ffffffffffffffffffffffffffffffffffffffff16938301939093526002830180549293929184019161055390610c6b565b80601f016020809104026020016040519081016040528092919081815260200182805461057f90610c6b565b80156105cc5780601f106105a1576101008083540402835291602001916105cc565b820191906000526020600020905b8154815290600101906020018083116105af57829003601f168201915b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561063b57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610610575b505050505081526020016004820154815260200160058201805461065e90610c6b565b80601f016020809104026020016040519081016040528092919081815260200182805461068a90610c6b565b80156106d75780601f106106ac576101008083540402835291602001916106d7565b820191906000526020600020905b8154815290600101906020018083116106ba57829003601f168201915b505050505081525050815260200190600101906104f3565b505050509050919050565b828054828255906000526020600020908101928215610774579160200282015b8281111561077457825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90911617825560209092019160019091019061071a565b50610780929150610784565b5090565b5b808211156107805760008155600101610785565b803573ffffffffffffffffffffffffffffffffffffffff811681146107bd57600080fd5b919050565b600080604083850312156107d557600080fd5b6107de83610799565b946020939093013593505050565b60005b838110156108075781810151838201526020016107ef565b50506000910152565b600081518084526108288160208601602086016107ec565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b85815273ffffffffffffffffffffffffffffffffffffffff8516602082015260a06040820152600061088f60a0830186610810565b84606084015282810360808401526108a78185610810565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610929576109296108b3565b604052919050565b600082601f83011261094257600080fd5b813567ffffffffffffffff81111561095c5761095c6108b3565b61098d60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016108e2565b8181528460208386010111156109a257600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156109d557600080fd5b843567ffffffffffffffff808211156109ed57600080fd5b6109f988838901610931565b9550602091508187013581811115610a1057600080fd5b8701601f81018913610a2157600080fd5b803582811115610a3357610a336108b3565b8060051b610a428582016108e2565b918252828101850191858101908c841115610a5c57600080fd5b938601935b83851015610a8157610a7285610799565b82529386019390860190610a61565b985050505060408801359450506060870135915080821115610aa257600080fd5b50610aaf87828801610931565b91505092959194509250565b600060208284031215610acd57600080fd5b813567ffffffffffffffff811115610ae457600080fd5b610af084828501610931565b949350505050565b600060208284031215610b0a57600080fd5b5035919050565b602081526000610b246020830184610810565b9392505050565b600060208284031215610b3d57600080fd5b610b2482610799565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610c5c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08a8503018652825160c0815186528982015173ffffffffffffffffffffffffffffffffffffffff8082168c8901528a8401519150828b890152610bdc83890183610810565b6060858101518a8303918b01919091528051808352908e019450908d01925086905b80821015610c2057845183168452938d0193928d019260019190910190610bfe565b5050506080838101519088015260a09283015187820384890152929150610c478184610810565b988b0198965050509288019250600101610b6e565b50919998505050505050505050565b600181811c90821680610c7f57607f821691505b602082108103610cb8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115610d0857600081815260208120601f850160051c81016020861015610ce55750805b601f850160051c820191505b81811015610d0457828155600101610cf1565b5050505b505050565b815167ffffffffffffffff811115610d2757610d276108b3565b610d3b81610d358454610c6b565b84610cbe565b602080601f831160018114610d8e5760008415610d585750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610d04565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015610ddb57888601518255948401946001909101908401610dbc565b5085821015610e1757878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60008251610e398184602087016107ec565b9190910192915050565b80820180821115610e7d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9291505056fea164736f6c6343000813000a";

type CalimochoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CalimochoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Calimocho__factory extends ContractFactory {
  constructor(...args: CalimochoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Calimocho & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Calimocho__factory {
    return super.connect(runner) as Calimocho__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CalimochoInterface {
    return new Interface(_abi) as CalimochoInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Calimocho {
    return new Contract(address, _abi, runner) as unknown as Calimocho;
  }
}
